#%RAML 0.8

title: Level Gauge Server
version: v0.1
mediaType: application/json

/device:
  post:
    description: Get token id with given device name and serial code
    body:
      application/json:
        schema: |
          {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "required": true,
            "properties": {
              "device": {
                "type": "object",
                "required": true,
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "serial": {
                    "type": "string",
                    "required": true
                  }
                }
              },
              "app": {
                "type": "object",
                "required": false
              },
              "user": {
                "type": "object",
                "required": false
              }
            }
          }
        example: |
          {
            "device": {
              "name": "test_name",
              "serial": "test_serial"
            }
          }
    responses:
      200:
        description: Session token was generated successfully
        body:
          example: |
            {
              "deviceid": "test_deviceid",
              "token": "test_token",
              "ttl": 3600
            }
      400:
        description: Data fields are missing or invalid in JSON body
        body:
          example: |
            {
              "status": "JSON Body is missing fields"
            }
      500:
        description: internal server error
        body:
          example: |
            {
              "status": "Internal error"
            }

/store:
  post:
    description: Save level gauge data
    headers:
      x-api-token:
        example: longlongstring
    body:
      application/json:
        schema: |
          {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "required": true,
            "properties": {
              "deviceid": {
                "type": "string",
                "required": true
              },
              "time": {
                "type": "integer",
                "required": true,
                "description": "unix time integer"
              },
              "event": {
                "type": "integer",
                "required": true,
                "description": "0 if not an event data, 1 if is"
              },
              "level": {
                "type": "integer",
                "required": true
              }
            }
          }
        example: |
          {
            "deviceid": "test_device_id",
            "time": 1234566789,
            "event": 0,
            "level": 5
          }
    responses:
      200:
        description: Data was saved successfully
        body:
          example: |
            {
              "result": "ok"
            }
      400:
        description: Data fields are missing or invalid in JSON body
        body:
          example: |
            {
              "status": "JSON Body is missing fields"
            }
      500:
        description: internal server error
        body:
          example: |
            {
              "status": "Internal error"
            }

/retrieve:
  post:
    description: Get level gauge data with conditions
    headers:
      x-api-token:
        example: longlongstring
    body:
      application/json:
        schema: |
          {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "required": true,
            "properties": {
              "deviceid": {
                "type": "string",
                "required": true
              },
              "date": {
                "type": "array",
                "description": "Start and end time of time interval to query, in unix time",
                "items": {
                  "type": "integer"
                }
              },
              "event": {
                "type": "integer",
                "description": "-1 to query regardless of event, 0 for non-event, 1 for event"
              }
            }
          }
        example: |
          {
            "deviceid": "test_device_id",
            "date": [0, -1],
            "event": -1
          }
    responses:
      200:
        body:
          example: |
            {
              "result": [
                {
                  "deviceid": "test_deviceid",
                  "time": 123456789,
                  "event": 0,
                  "level": 5
                }
              ]
            }
      400:
        body:
          example: |
            {
              "status": "JSON Body is missing fields"
            }
      500:
        body:
          example: |
            {
              "status": "Internal error"
            }

/close:
  post:
    description: Close current session
    headers:
      x-api-token:
        example: longlongstring
    body:
      application/json:
        schema: |
          {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "required": true,
            "properties": {
              "token": {
                "type": "string",
                "required": true
              }
            }
          }
        example: |
          {
            "token": "test_token"
          }
    responses:
      200:
        body:
          example: |
            {
              "result": "ok"
            }
      400:
        body:
          example: |
            {
              "status": "JSON Body is missing fields"
            }
      500:
        body:
          example: |
            {
              "status": "Internal error"
            }
/open:
  post:
    description: Open session with deviceid
    body:
      application/json:
        schema: |
          {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "required": true,
            "properties": {
              "deviceid": {
                "type": "string",
                "required": true
              }
            }
          }
        example: |
          {
            "deviceid": "test_deviceid"
          }
    responses:
      200:
        body:
          example: |
            {
              "token": "test_token",
              "ttl": 3600
            }
      400:
        body:
          example: |
            {
              "status": "JSON Body is missing fields"
            }
      500:
        body:
          example: |
            {
              "status": "Internal error"
            }
